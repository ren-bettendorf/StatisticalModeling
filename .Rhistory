samples = rnorm(350, mean = 3, sd = sqrt(11))
samples[samples > 5]
samples[samples > 5] / 350
nrow(samples)
ncol(samples)
?samples
12 * 7 + 8
/ 350
92 / 350
some_fun = function(arg1 = 2, arg2 = 1) {
return(mean(arg1 * arg2))
}
(some_fun() + some_fun(arg1 = 4, arg2 = 1:10)) / some_fun(arg1 = 5, arg2 = 1:5)
tree_model = lm(Volume ~ Height, data = trees)
tree_model$r.squared
View(tree_model)
summary(tree_model)
summar(tree_model)$rsquared
summary(tree_model)$rsquared
summary(tree_model)$r.squared
?Oranges
?Orange
or_model = lm(circumference ~ age, data = Orange)
new_age = data.frame(age = c(500, 2500))
predict(or_model, new_data = new_age, interval = "prediction")
?predict
or_model = lm(circumference ~ age, data = Orange)
new_age = data.frame(age = c(500, 2500))
predict(or_model, newdata = new_age, interval = "prediction")
plot(Orange$age, Orange$circumference)
?pt
pt(or_model = lm(circumference ~ age, data = Orange)
beta_hat = summary(or_model)$coefficients[2, 1]
t_val = (beta_hat - 0.123)/(summary(or_model)$sigma/sqrt(sum(Orange$age-mean(Orange$age)^2)
beta_hat = summary(or_model)$coefficients[2, 1]
t_val = (beta_hat - 0.123)/(summary(or_model)$sigma/sqrt(sum(Orange$age-mean(Orange$age)^2)))
summary(or_model)$sigma
t_val = (beta_hat - 0.123)/(summary(or_model)$sigma/sqrt(sum((Orange$age-mean(Orange$age))^2)))
t_val
2 * pt(abs(t_val), df = length(resid(or_model)) - 2, lower.tail = FALSE))
2 * pt(abs(t_val), df = length(resid(or_model)) - 2, lower.tail = FALSE)
pnorm(13, mean = 4 + 1.3 * 1 - 2.4 * 2 + 3.7 * 3, sd = 5, lower.tail = FALSE)
X = as.matrix(cbind(x0, x_values))
set.seed(420)
x0 = rep(1, 10)
x_values = data.frame(
x1 = rnorm(10),
x2 = runif(10),
x3 = runif(10),
x4 = runif(10)
)
X = as.matrix(cbind(x0, x_values))
library(MASS)
?Boston
bos_mod = lm(medv ~ rm + tax, data = Boston)
bos_mod = lm(medv ~ lstat + rm + crim + tax + nox, data = Boston)
summary(bos_mod)
summary(bos_mod)$coefficients["tax", "Pr(>|t|)"]
?qt
p = 6 + 1
n = 17
qt(0.995, df1 = p - 1, df2 = n - p)
?qt3
?qtn
?ft
?qtf
?ft
?tf
?anova
?glm
?lm
?size
length(samples[samples > 5])
length(samples[samples > 5]) / 350
arg1 = 4, arg2 = 1:10
arg1 = 4
arg2 = 1:10
arg1 * arg2
mean(arg1 * arg2)
